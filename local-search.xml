<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo的使用</title>
    <link href="/2023/09/22/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/09/22/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>记录一些hexo使用方式</p><span id="more"></span><h2 id="博客删改"><a href="#博客删改" class="headerlink" title="博客删改"></a>博客删改</h2><h3 id="第一个使用的必然是新增文章啦"><a href="#第一个使用的必然是新增文章啦" class="headerlink" title="第一个使用的必然是新增文章啦"></a>第一个使用的必然是新增文章啦</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> n 文章名   <span class="hljs-comment">#添加文章</span><br></code></pre></td></tr></table></figure><p>执行该命令后就可以到<code>blog\source\_posts</code>下面找到你的文章，以上是默认的。</p><p>实际上系统有三个自带的，默认模板是<code>post</code>，可以自己手动添加模板或者修改系统模板，如何在创建的时候指定模板名字即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo n <span class="hljs-selector-attr">[模板名称]</span> 文章名<br></code></pre></td></tr></table></figure><p>模板位置</p><p><img src="/../images/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/image-20230922095539958.png" alt="模板位置"></p><h3 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h3><p>删除只需要本地将md文件删除之后再重新生成页面、发布到GitHub上面即可（具体操作我还没有尝试）</p><h2 id="发布流程"><a href="#发布流程" class="headerlink" title="发布流程"></a>发布流程</h2><p>我的流程如下，按理说第一个流程<code>hexo c</code>是不需要的，但是我自己是这样子操作的。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo c</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h2 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h2><p>我本来以为用typora来编辑文章，只要在上面显示的上传之后也会显示，没想到的结果是没有显示，所有又去查看了几个文章，尝试了几个方法，最后结果是多安装了一个插件，并且修改了一些typora设置。</p><h3 id="我的设置"><a href="#我的设置" class="headerlink" title="我的设置"></a>我的设置</h3><p>我是将根目录下面的<code>_config.yml</code>配置<code>post_asset_folder: true</code>打开了，如何将图片先复制到自动生成的对应文件夹里面，然后直接拉到typora中，不得不说真的麻烦，而且结果还是没有正常在网页上面显示。</p><h3 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h3><p>使用<code>hexo-renderer-marked</code>插件，用<code>npm install hexo-renderer-marked</code>安装，然后添加<code>_config.yml</code>配置，如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>有文章说这样子就可以用<code>！[](image.jpg)</code>显示图片了，但是我的应该是失败了，不知道是不是格式不太对。</p><p>然后另一篇文章在这个基础上面对typora进行了一个设置，并且提醒我需要先设置好再重新插入图片才可以显示。具体如下</p><p><img src="/../images/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/image-20230922101155610.png" alt="image-20230922101155610"></p><p><img src="/../images/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/image-20230922101947617.png" alt="根目录设置"></p><p>先在<code>source</code>下面创建一个与posts同级别的<code>images</code>目录，然后修改自己的typora设置。在这个基础上，我觉得可以把<code>post_asset_folder: true</code>关掉，当然我并没有关掉。然后再将根目录设置为<code>source</code>，这个我不是很理解干什么用，但是结果有用就行。</p><p>设置好了之后重新添加图片发布之后可以正常在网页上面回显了，并且由于设置了typora，复制图片直接复制到所需位置时候，会自动保存到你设置的位置，可以很方便的管理图片。</p><h2 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h2><p>我一开始看别人文章都没有提到标签和分类需要做什么，但是自己直接添加的时候好像导致了我文章直接不显示，我也不清楚是不是这个原因导致的。</p><h3 id="新建分类和标签"><a href="#新建分类和标签" class="headerlink" title="新建分类和标签"></a>新建分类和标签</h3><p>需要和创建<code>about</code>一样创建对应的tags和categories文件并且在生成的md文件里面添加文章type和layout，我的tags示例如下，categories对应着即可。</p><p><img src="/../images/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/image-20230922102618394.png" alt="image-20230922102618394"></p><h3 id="文章设置"><a href="#文章设置" class="headerlink" title="文章设置"></a>文章设置</h3><p>查阅官方文档时候，说hexo不支持一个文章对应多个同级分类。官方文档分类如下</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">categories</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Life</span><br></code></pre></td></tr></table></figure><p>会使分类 <code>Life</code> 成为 <code>Diary</code> 的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> [Diary, PlayStation]<br><span class="hljs-literal">-</span> [Diary, Games]<br><span class="hljs-literal">-</span> [Life]<br></code></pre></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">标签和分类区别：分类具有顺序性和层次性，也就是说 `Foo, Bar` 不等于 `Bar, Foo`；而标签没有顺序和层次。<br></code></pre></td></tr></table></figure><p>我的分类示例如下：</p><p><img src="/../images/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/image-20230922102211755.png" alt="image-20230922102211755"></p><h2 id="覆盖配置"><a href="#覆盖配置" class="headerlink" title="覆盖配置"></a>覆盖配置</h2><p>在启动服务时命令行界面总是提示推荐使用覆盖配置，但是我去官方查询覆盖配置的时候，上面写着通过npm安装的可忽略，其他安装方法建议学习，所以一开始我就没看。</p><p>提示多了我就去官方看了下具体内容，发现这个覆盖配置在很多地方都应该可以很好的使用，但是不知道为什么我看的博客里面居然不推荐我使用。可以说是浪费了我很大一把的时间了。</p><p>简单的说覆盖是在主题外面额外添加一个<code>_config_fluid_yml</code>,将需要改变的配置写入，修改的配置会覆盖原本主题的配置，没有修改的配置就会使用默认配置。这样子写好一个覆盖配置文件之后，以后需要修改的内容在这一份文件里面修改即可，不需要看原本主题配置文件。虽然原本主题文件很全面，但是太过全面就会造成当修改一个配置的时候会很难找到具体配置位置。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>还在使用中，具体更多操作以后补充。</p><p>啦啦啦啦啦</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于我的博客</title>
    <link href="/2023/09/21/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/21/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="搭建第一步"><a href="#搭建第一步" class="headerlink" title="搭建第一步"></a>搭建第一步</h3><p>那第一步必然是找其他人的博客了解如何搭建，先在网上找了很多博客，大致先把CSDN、知乎、博客园的都看了一篇，因为每一篇好像都有自己独特的地方，虽然说每一篇都说自己最细，但是真的多看就能多学到不一样的操作，最后选择一个合适自己的跟着操作，其他觉得有帮助的也要随时打开查看不一样的点。</p><h3 id="选技术"><a href="#选技术" class="headerlink" title="选技术"></a>选技术</h3><p>网上好像来来去去都是hexo，所以我也没什么好犹豫的，GitHub+hexo组合，主题选的是fluid，这个主题也是看到博客有比较详细的配置修改操作，所以选择了这个主题，当然人家自己的配置文件里面注释也是非常的清楚，有需要可以查官方文档配合着配置进行操作。</p><span id="more"></span><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li><p>GitHub</p><p>需要一个账号，你得知道这个东西，起码有需要的时候你应该有手段可以进去，windows系统有个自带的加速器可以进，具体叫什么我忘记了，后续了解一下我可能会补上。</p></li><li><p>Git</p><p>网上找个教程安装一下</p></li><li><p>NodeJS</p><p>网上找个教程安装一下</p></li></ul><p>因为我本身都是具备这些条件并且也了解都是什么东西，所以我是直接进入操作步骤。</p><h4 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h4><h5 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h5><ol><li>创建仓库</li></ol><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg" alt="创建仓库"></p><ol start="2"><li>仓库名称</li></ol><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/%E4%BB%93%E5%BA%93%E5%90%8D%E5%AD%97.png" alt="仓库名字"></p><h5 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h5><ol><li><p>win+R输入cmd回车，输入下列命令安装hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>验证hexo</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">hexo -v ##查看版本<br></code></pre></td></tr></table></figure></li><li><p>创建项目并且初始化</p><p>新建一个空白文件夹blog（名字随便起，有没有中文限制我不知道），在目录页输入cmd并且回车</p><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/%E7%9B%AE%E5%BD%95.jpg" alt="目录"></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">hexo init  ##初始化该目录<br>npm install ##安装（这个好像可以省略）<br>hexo g ##生成静态页面<br>hexo server ##启动服务<br></code></pre></td></tr></table></figure></li><li><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/hexo%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%A0%B7.png" alt="hexo初始模样"></p></li><li><p>更换主题</p><p>官方的主题其实也可以了，不过我看到别人换了，那我肯定也换一下</p><p>[fluid官方配置](<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a>)，<a href="https://github.com/fluid-dev/hexo-theme-fluid">Github地址</a>，到GitHub将fluid下载之后解压到你文件夹（blog）目录下的themes中，并且并文件夹重命名为fluid，其他命名是否可以我没有尝试。然后在文件夹（blog）下的_config.yml修改配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br><span class="hljs-attr">title:</span>  <span class="hljs-string">天絮</span>    <span class="hljs-comment">#网址显示</span><br><span class="hljs-attr">subtitle:</span>  <span class="hljs-string">&#x27;天旭&#x27;</span> <span class="hljs-comment">#我没有找到影响了哪里</span><br><span class="hljs-attr">description:</span>  <span class="hljs-string">&#x27;一个乱七八糟的个人博客&#x27;</span>  <span class="hljs-comment">#我也没看到在哪里</span><br><span class="hljs-attr">keywords:</span>      <span class="hljs-comment">#关键词</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">天絮</span>     <span class="hljs-comment">#作者名字</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment">#语言</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><br><span class="hljs-attr">url:</span> <span class="hljs-string">http://HLSLTM.github.io</span>    <span class="hljs-comment">#这里好像需要按照上面的进行修改</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span>   <span class="hljs-comment">#这个配置是在生成文章的时候生成一个同名的资源目录用于存放图片文件。</span><br></code></pre></td></tr></table></figure><p>以上内容想改的对应着改，大概注释应该都能看懂，找到对应位置改一下就行，我的不是按顺序出现的。</p></li><li><p>fluid关于页需要自己创建</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>就在对应文件夹（blog）cmd，然后输入之后回车即可。然后找到文件夹（**&#x2F;source&#x2F;about&#x2F;index.md<strong>），进去添加</strong>layout**，如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写你想写的关于页内容</span><br></code></pre></td></tr></table></figure></li><li><p>重新启动</p><p>这里重新启动好像最好是先清理一下缓存啥的，我也不知道影响大不大。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> c  <span class="hljs-comment">#清理</span><br>hexo g  <span class="hljs-comment">#生成</span><br>hexo s  <span class="hljs-comment">#起服务</span><br></code></pre></td></tr></table></figure></li><li><p>重新访问本地端口4000</p><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/fluid%E4%B8%BB%E9%A1%B5%E9%BB%98%E8%AE%A4-1695346527143.png" alt="fluid主页默认"></p></li></ol><h5 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h5><p>配置文件位于themes&#x2F;fluid&#x2F;_config.yml，不要跟根目录下的_config.yml混淆。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 导航栏的相关配置</span><br><span class="hljs-comment"># Navigation bar</span><br><span class="hljs-attr">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">&quot;天絮&quot;</span><br>  <br>  <br>  <span class="hljs-comment"># 首页副标题的独立设置</span><br>  <span class="hljs-comment"># Independent config of home page subtitle</span><br>  <span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br><span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br><span class="hljs-attr">text:</span> <span class="hljs-string">&quot;天絮 博客 空间&quot;</span><br><br></code></pre></td></tr></table></figure><h5 id="阅读量统计"><a href="#阅读量统计" class="headerlink" title="阅读量统计"></a>阅读量统计</h5><p><code>Fluid</code> 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，需要借助三方服务来统计阅读量，这里是有 <a href="https://console.leancloud.app/apps/ViLbuXv6pELnUXh5SxDYGPLg-MdYXbMMI/"><code>Leancloud</code></a> 的免费服务来进行统计。</p><ol><li><p>注册Leancloud，开启服务，拿到key</p><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/leancloud%E4%BD%BF%E7%94%A8.jpg" alt="leancloud使用"></p></li><li><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/leancloudKEY.jpg" alt="leancloudKEY"></p></li><li><p>继续修改themes&#x2F;fluid&#x2F;_config.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 网页访问统计</span><br><span class="hljs-comment"># Analysis of website visitors</span><br><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">##开启一下</span><br><br>  <span class="hljs-comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加</span><br>  <span class="hljs-comment"># LeanCloud count statistics, which can be used for PV UV display. If `web_analytics: enable` is false, PV UV display will only query and not increase</span><br>  <span class="hljs-attr">leancloud:</span><br>  <span class="hljs-attr">app_id:</span>     <span class="hljs-comment">#填入你的</span><br>  <span class="hljs-attr">app_key:</span>  <br>    <br><br><span class="hljs-comment"># 浏览量计数</span><br><span class="hljs-comment"># Number of visits</span><br><span class="hljs-attr">views:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">#看仔细</span><br><span class="hljs-comment"># 统计数据来源</span><br><span class="hljs-comment"># Data Source</span><br><span class="hljs-comment"># Options: busuanzi | leancloud</span><br><span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>     <span class="hljs-comment">#修改一下</span><br><br><br><span class="hljs-comment"># 展示网站的 PV、UV 统计数</span><br><span class="hljs-comment"># Display website PV and UV statistics</span><br><span class="hljs-attr">statistics:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">#开启一下</span><br><br><span class="hljs-comment"># 统计数据来源，使用 leancloud 需要设置 `web_analytics: leancloud` 中的参数；使用 busuanzi 不需要额外设置，但是有时不稳定，另外本地运行时 busuanzi 显示统计数据很大属于正常现象，部署后会正常</span><br><span class="hljs-comment"># Data source. If use leancloud, you need to set the parameter in `web_analytics: leancloud`</span><br><span class="hljs-comment"># Options: busuanzi | leancloud</span><br><span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>         <span class="hljs-comment">#数据来源</span><br><span class="hljs-attr">pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span>   <span class="hljs-comment">#没有自己添加</span><br><span class="hljs-attr">uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br></code></pre></td></tr></table></figure></li></ol><h5 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h5><p>评论功能的代码已经写好了，只不过没有开启，需要修改一些配置，打开主题目录 <code>themes\fluid</code>下的 <code>_config.yml</code> 文件，修改如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-comment"># 评论插件</span><br>  <span class="hljs-comment"># Comment plugin</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 指定的插件，需要同时设置对应插件的必要参数</span><br>    <span class="hljs-comment"># The specified plugin needs to set the necessary parameters at the same time</span><br>    <span class="hljs-comment"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis | giscus | discuss</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">valine</span>   <span class="hljs-comment">#改个名</span><br>    <br><br><span class="hljs-comment"># Valine</span><br><span class="hljs-comment"># 基于 LeanCloud</span><br><span class="hljs-comment"># Based on LeanCloud</span><br><span class="hljs-comment"># See: https://valine.js.org/</span><br><span class="hljs-attr">valine:</span><br><span class="hljs-attr">appId:</span>    <span class="hljs-comment">##你的leancloud id、key</span><br><span class="hljs-attr">appKey:</span> <br><span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br><span class="hljs-attr">placeholder:</span><br></code></pre></td></tr></table></figure><h5 id="发布到GitHub"><a href="#发布到GitHub" class="headerlink" title="发布到GitHub"></a>发布到GitHub</h5><p>在文件夹下面cmd输入以下代码回车</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">npm install hexo-deployer-git --save   ##安装hexo-deployer-git<br></code></pre></td></tr></table></figure><p>修改根目录下的 <code>_config.yml</code>（不是themes里面的哦），配置 <code>GitHub</code> 相关信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/HLSLTM/HLSLTM.github.io.git</span><br><span class="hljs-symbol">  branch:</span> main   <span class="hljs-meta">#目前应该都是main</span><br><span class="hljs-symbol">  token:</span>   <span class="hljs-meta">#GitHub中获取，绑定ssh应该可以不用</span><br></code></pre></td></tr></table></figure><p>其中 <code>token</code> 为 <code>GitHub</code> 的 <code>Personal access tokens</code>，获取方式如下图</p><p><img src="/../images/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/GitHub-token.jpg" alt="GitHub-token"></p><p>部署到GitHub（可以本地起服务看看样式）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> c  <span class="hljs-comment">#我个人建议，不然好像容易页面不刷新，至少我是这样子的</span><br>hexo g  <span class="hljs-comment">#重新生成静态页面</span><br>hexo d  <span class="hljs-comment">#部署到GitHub</span><br></code></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>第一次写博客，感觉就是很难，图要配代码要拉。</p><p>好吧，这好像也不是该总结的，不过关于这个我差不多也就这样子（开摆），后面再写一份关于遇到的问题以及解决方法以及操作，等我熟悉之后。</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好呀</title>
    <link href="/2023/09/21/hello-world/"/>
    <url>/2023/09/21/hello-world/</url>
    
    <content type="html"><![CDATA[<h3 id="搭建第一步"><a href="#搭建第一步" class="headerlink" title="搭建第一步"></a>搭建第一步</h3><p>那第一步必然是找其他人的博客了解如何搭建，先在网上找了很多博客，大致先把CSDN、知乎、博客园的都看了一篇，因为每一篇好像都有自己独特的地方，虽然说每一篇都说自己最细，但是真的多看就能多学到不一样的操作，最后选择一个合适自己的跟着操作，其他觉得有帮助的也要随时打开查看不一样的点。</p><h3 id="选技术"><a href="#选技术" class="headerlink" title="选技术"></a>选技术</h3><p>网上好像来来去去都是hexo，所以我也没什么好犹豫的，GitHub+hexo组合，主题选的是fluid，这个主题也是看到博客有比较详细的配置修改操作，所以选择了这个主题，当然人家自己的配置文件里面注释也是非常的清楚，有需要可以查官方文档配合着配置进行操作。</p><span id="more"></span><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li><p>GitHub</p><p>需要一个账号，你得知道这个东西，起码有需要的时候你应该有手段可以进去，windows系统有个自带的加速器可以进，具体叫什么我忘记了，后续了解一下我可能会补上。</p></li><li><p>Git</p><p>网上找个教程安装一下</p></li><li><p>NodeJS</p><p>网上找个教程安装一下</p></li></ul><p>因为我本身都是具备这些条件并且也了解都是什么东西，所以我是直接进入操作步骤。</p><h4 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h4><h5 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h5><ol><li>创建仓库</li></ol><p><img src="/images/hello-world/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93-1695346212174.jpg" alt="创建仓库"></p><ol start="2"><li>仓库名称</li></ol><p><img src="/images/hello-world/%E4%BB%93%E5%BA%93%E5%90%8D%E5%AD%97.png" alt="仓库名字"></p><h5 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h5><ol><li><p>win+R输入cmd回车，输入下列命令安装hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>验证hexo</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">hexo -v ##查看版本<br></code></pre></td></tr></table></figure></li><li><p>创建项目并且初始化</p><p>新建一个空白文件夹blog（名字随便起，有没有中文限制我不知道），在目录页输入cmd并且回车</p><p><img src="/images/hello-world/%E7%9B%AE%E5%BD%95.jpg" alt="目录"></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">hexo init  ##初始化该目录<br>npm install ##安装（这个好像可以省略）<br>hexo g ##生成静态页面<br>hexo server ##启动服务<br></code></pre></td></tr></table></figure></li><li><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><p><img src="/images/hello-world/hexo%E5%88%9D%E5%A7%8B%E6%A8%A1%E6%A0%B7.png" alt="hexo初始模样"></p></li><li><p>更换主题</p><p>官方的主题其实也可以了，不过我看到别人换了，那我肯定也换一下</p><p>[fluid官方配置](<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a>)，<a href="https://github.com/fluid-dev/hexo-theme-fluid">Github地址</a>，到GitHub将fluid下载之后解压到你文件夹（blog）目录下的themes中，并且并文件夹重命名为fluid，其他命名是否可以我没有尝试。然后在文件夹（blog）下的_config.yml修改配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br><span class="hljs-attr">title:</span>  <span class="hljs-string">天絮</span>    <span class="hljs-comment">#网址显示</span><br><span class="hljs-attr">subtitle:</span>  <span class="hljs-string">&#x27;天旭&#x27;</span> <span class="hljs-comment">#我没有找到影响了哪里</span><br><span class="hljs-attr">description:</span>  <span class="hljs-string">&#x27;一个乱七八糟的个人博客&#x27;</span>  <span class="hljs-comment">#我也没看到在哪里</span><br><span class="hljs-attr">keywords:</span>      <span class="hljs-comment">#关键词</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">天絮</span>     <span class="hljs-comment">#作者名字</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment">#语言</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><br><span class="hljs-attr">url:</span> <span class="hljs-string">http://HLSLTM.github.io</span>    <span class="hljs-comment">#这里好像需要按照上面的进行修改</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span>   <span class="hljs-comment">#这个配置是在生成文章的时候生成一个同名的资源目录用于存放图片文件。</span><br></code></pre></td></tr></table></figure><p>以上内容想改的对应着改，大概注释应该都能看懂，找到对应位置改一下就行，我的不是按顺序出现的。</p></li><li><p>fluid关于页需要自己创建</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>就在对应文件夹（blog）cmd，然后输入之后回车即可。然后找到文件夹（**&#x2F;source&#x2F;about&#x2F;index.md<strong>），进去添加</strong>layout**，如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写你想写的关于页内容</span><br></code></pre></td></tr></table></figure></li><li><p>重新启动</p><p>这里重新启动好像最好是先清理一下缓存啥的，我也不知道影响大不大。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> c  <span class="hljs-comment">#清理</span><br>hexo g  <span class="hljs-comment">#生成</span><br>hexo s  <span class="hljs-comment">#起服务</span><br></code></pre></td></tr></table></figure></li><li><p>重新访问本地端口4000</p><p><img src="/images/hello-world/fluid%E4%B8%BB%E9%A1%B5%E9%BB%98%E8%AE%A4.png" alt="fluid主页默认"></p></li></ol><h5 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h5><p>配置文件位于themes&#x2F;fluid&#x2F;_config.yml，不要跟根目录下的_config.yml混淆。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 导航栏的相关配置</span><br><span class="hljs-comment"># Navigation bar</span><br><span class="hljs-attr">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">&quot;天絮&quot;</span><br>  <br>  <br>  <span class="hljs-comment"># 首页副标题的独立设置</span><br>  <span class="hljs-comment"># Independent config of home page subtitle</span><br>  <span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br><span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br><span class="hljs-attr">text:</span> <span class="hljs-string">&quot;天絮 博客 空间&quot;</span><br><br></code></pre></td></tr></table></figure><h5 id="阅读量统计"><a href="#阅读量统计" class="headerlink" title="阅读量统计"></a>阅读量统计</h5><p><code>Fluid</code> 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，需要借助三方服务来统计阅读量，这里是有 <a href="https://console.leancloud.app/apps/ViLbuXv6pELnUXh5SxDYGPLg-MdYXbMMI/"><code>Leancloud</code></a> 的免费服务来进行统计。</p><ol><li><p>注册Leancloud，开启服务，拿到key</p><p><img src="/images/hello-world/leancloud%E4%BD%BF%E7%94%A8.jpg" alt="leancloud使用"></p></li><li><p><img src="/images/hello-world/leancloudKEY.jpg" alt="leancloudKEY"></p></li><li><p>继续修改themes&#x2F;fluid&#x2F;_config.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 网页访问统计</span><br><span class="hljs-comment"># Analysis of website visitors</span><br><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">##开启一下</span><br><br>  <span class="hljs-comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加</span><br>  <span class="hljs-comment"># LeanCloud count statistics, which can be used for PV UV display. If `web_analytics: enable` is false, PV UV display will only query and not increase</span><br>  <span class="hljs-attr">leancloud:</span><br>  <span class="hljs-attr">app_id:</span>     <span class="hljs-comment">#填入你的</span><br>  <span class="hljs-attr">app_key:</span>  <br>    <br><br><span class="hljs-comment"># 浏览量计数</span><br><span class="hljs-comment"># Number of visits</span><br><span class="hljs-attr">views:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">#看仔细</span><br><span class="hljs-comment"># 统计数据来源</span><br><span class="hljs-comment"># Data Source</span><br><span class="hljs-comment"># Options: busuanzi | leancloud</span><br><span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>     <span class="hljs-comment">#修改一下</span><br><br><br><span class="hljs-comment"># 展示网站的 PV、UV 统计数</span><br><span class="hljs-comment"># Display website PV and UV statistics</span><br><span class="hljs-attr">statistics:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment">#开启一下</span><br><br><span class="hljs-comment"># 统计数据来源，使用 leancloud 需要设置 `web_analytics: leancloud` 中的参数；使用 busuanzi 不需要额外设置，但是有时不稳定，另外本地运行时 busuanzi 显示统计数据很大属于正常现象，部署后会正常</span><br><span class="hljs-comment"># Data source. If use leancloud, you need to set the parameter in `web_analytics: leancloud`</span><br><span class="hljs-comment"># Options: busuanzi | leancloud</span><br><span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>         <span class="hljs-comment">#数据来源</span><br><span class="hljs-attr">pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span>   <span class="hljs-comment">#没有自己添加</span><br><span class="hljs-attr">uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br></code></pre></td></tr></table></figure></li></ol><h5 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h5><p>评论功能的代码已经写好了，只不过没有开启，需要修改一些配置，打开主题目录 <code>themes\fluid</code>下的 <code>_config.yml</code> 文件，修改如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-comment"># 评论插件</span><br>  <span class="hljs-comment"># Comment plugin</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 指定的插件，需要同时设置对应插件的必要参数</span><br>    <span class="hljs-comment"># The specified plugin needs to set the necessary parameters at the same time</span><br>    <span class="hljs-comment"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis | giscus | discuss</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">valine</span>   <span class="hljs-comment">#改个名</span><br>    <br><br><span class="hljs-comment"># Valine</span><br><span class="hljs-comment"># 基于 LeanCloud</span><br><span class="hljs-comment"># Based on LeanCloud</span><br><span class="hljs-comment"># See: https://valine.js.org/</span><br><span class="hljs-attr">valine:</span><br><span class="hljs-attr">appId:</span>    <span class="hljs-comment">##你的leancloud id、key</span><br><span class="hljs-attr">appKey:</span> <br><span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br><span class="hljs-attr">placeholder:</span><br></code></pre></td></tr></table></figure><h5 id="发布到GitHub"><a href="#发布到GitHub" class="headerlink" title="发布到GitHub"></a>发布到GitHub</h5><p>在文件夹下面cmd输入以下代码回车</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">npm install hexo-deployer-git --save   ##安装hexo-deployer-git<br></code></pre></td></tr></table></figure><p>修改根目录下的 <code>_config.yml</code>（不是themes里面的哦），配置 <code>GitHub</code> 相关信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/HLSLTM/HLSLTM.github.io.git</span><br><span class="hljs-symbol">  branch:</span> main   <span class="hljs-meta">#目前应该都是main</span><br><span class="hljs-symbol">  token:</span>   <span class="hljs-meta">#GitHub中获取，绑定ssh应该可以不用</span><br></code></pre></td></tr></table></figure><p>其中 <code>token</code> 为 <code>GitHub</code> 的 <code>Personal access tokens</code>，获取方式如下图</p><p><img src="/images/hello-world/GitHub-token.jpg" alt="GitHub-token"></p><p>部署到GitHub（可以本地起服务看看样式）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> c  <span class="hljs-comment">#我个人建议，不然好像容易页面不刷新，至少我是这样子的</span><br>hexo g  <span class="hljs-comment">#重新生成静态页面</span><br>hexo d  <span class="hljs-comment">#部署到GitHub</span><br></code></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>第一次写博客，感觉就是很难，图要配代码要拉。</p><p>好吧，这好像也不是该总结的，不过关于这个我差不多也就这样子（开摆），后面再写一份关于遇到的问题以及解决方法以及操作，等我熟悉之后。</p><h4 id="无关要紧，要凉"><a href="#无关要紧，要凉" class="headerlink" title="无关要紧，要凉"></a>无关要紧，要凉</h4><h4 id="一个小测试"><a href="#一个小测试" class="headerlink" title="一个小测试"></a>一个小测试</h4><p><img src="/images/hello-world/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.jpg" alt="创建仓库"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
